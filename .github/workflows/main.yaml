name: Package Extension

permissions:
  contents: write

on:
  push:
    branches: [ "main" ]

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout code
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'


      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 2) Automatically bump package.json version & create tag using standard-version
      - name: Bump version with standard-version
        run: |
          npx standard-version --ci
          git push --follow-tags origin main

      # 3) Update src/manifest.json's version from package.json
      - name: Sync version into manifest.json
        run: npm run build

      # 4) Extract final version from package.json
      - name: Extract version from package.json
        id: extension_version
        run: |
          EXT_VERSION=$(jq -r '.version' package.json)
          echo "EXT_VERSION=$EXT_VERSION" >> $GITHUB_ENV

      # 5) Zip the extension from src/ directory
      - name: Zip the extension
        run: |
          cd src
          zip -r ../amrop-extension.zip .

      # 6) Create GitHub Release with zip
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "v${{ env.EXT_VERSION }}"
          release_name: "v${{ env.EXT_VERSION }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 7) Publish to the Chrome Web Store
      # - name: Publish to Chrome Web Store
      #   uses: mnao305/chrome-extension-upload@v5.0.0
      #   with:
      #     file-path: 'amrop-extension.zip'
      #     extension-id: ${{ secrets.EXTENSION_ID }}
      #     client-id: ${{ secrets.CLIENT_ID }}
      #     client-secret: ${{ secrets.CLIENT_SECRET }}
      #     refresh-token: ${{ secrets.REFRESH_TOKEN }}